{"version":3,"sources":["webpack://samuelesanguineti/./src/components/Seo.js","webpack://samuelesanguineti/./src/pages/faithconnexion.js"],"names":["Seo","description","lang","meta","title","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","SanBenedetto","images","data","header","next","className","id","G","image","getImage","nodes"],"mappings":"6LAIe,SAASA,EAAT,GAEE,IAAD,IADDC,EACC,EADDA,YAAaC,EACZ,EADYA,KAAMC,EAClB,EADkBA,KAAMC,EACxB,EADwBA,MAE9BC,GAASC,QAAe,cAAxBD,KAaFE,EAAkBN,GAAeI,EAAKG,aAAaP,YACnDQ,EAAY,UAAGJ,EAAKG,oBAAR,aAAG,EAAmBJ,MAExC,OACI,gBAAC,IAAD,CACIM,eAAgB,CACdR,QAEFE,MAAOA,EACPO,cAAeF,EAAY,QAAWA,EAAiB,KACvDN,KAAM,CACJ,CACES,KAAM,cACNC,QAASN,GAEX,CACEO,SAAU,WACVD,QAAST,GAEX,CACEU,SAAU,iBACVD,QAASN,GAEX,CACEO,SAAU,UACVD,QAAS,WAEX,CACED,KAAM,eACNC,QAAS,WAEX,CACED,KAAM,kBACNC,SAAS,UAAAR,EAAKG,oBAAL,eAAmBO,SAAU,IAExC,CACEH,KAAM,gBACNC,QAAST,GAEX,CACEQ,KAAM,sBACNC,QAASN,IAEXS,OAAOb,KAMnBH,EAAIiB,aAAe,CACjBf,KAAM,KACNC,KAAM,GACNF,YAAa,K,0HClEA,SAASiB,EAAT,GAAyC,IAAXC,EAAU,EAAjBC,KAAOD,OAE3C,OAAO,gBAAC,IAAD,CAAQE,OAAQ,kBAAmBC,KAAM,oBAC9C,gBAAC,IAAD,CAAKlB,MAAO,oBACZ,4QAKA,gTAOA,yBAAG,kCAAH,sIAGA,yBAAG,uCACH,uBAAKmB,UAAU,sBAAsBC,GAAG,qBACtC,uBAAKA,GAAG,OACN,gBAAC,EAAAC,EAAD,CAAaC,OAAOC,OAASR,EAAOS,MAAM,OAE5C,uBAAKJ,GAAG,OACN,gBAAC,EAAAC,EAAD,CAAaC,OAAOC,OAASR,EAAOS,MAAM,OAE5C,uBAAKJ,GAAG,OACN,gBAAC,EAAAC,EAAD,CAAaC,OAAOC,OAASR,EAAOS,MAAM,MAE1C,uBAAKL,UAAW,qBAEd,uBAAKC,GAAG,OACN,gBAAC,EAAAC,EAAD,CACIC,OAAOC,OAASR,EAAOS,MAAM,OAEnC,uBAAKJ,GAAG,OACN,gBAAC,EAAAC,EAAD,CAAaC,OAAOC,OAASR,EAAOS,MAAM,UAOlD,uBAAKL,UAAU,mBACb,uBAAKA,UAAU,QACb,uBAAKA,UAAU,UACb,gBAAC,EAAAE,EAAD,CAAaC,OAAOC,OAASR,EAAOS,MAAM,OAE5C,uBAAKL,UAAU,UACb,gBAAC,EAAAE,EAAD,CAAaC,OAAOC,OAASR,EAAOS,MAAM","file":"component---src-pages-faithconnexion-js-fd9288558457289c9a89.js","sourcesContent":["import React from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport { useStaticQuery, graphql } from 'gatsby';\r\n\r\nexport default function Seo({\r\n               description, lang, meta, title,\r\n             }) {\r\n  const { site } = useStaticQuery(\r\n      graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n          }\r\n        }\r\n      }\r\n    `,\r\n  );\r\n\r\n  const metaDescription = description || site.siteMetadata.description;\r\n  const defaultTitle = site.siteMetadata?.title;\r\n\r\n  return (\r\n      <Helmet\r\n          htmlAttributes={{\r\n            lang,\r\n          }}\r\n          title={title}\r\n          titleTemplate={defaultTitle ? `%s | ${defaultTitle}` : null}\r\n          meta={[\r\n            {\r\n              name: 'description',\r\n              content: metaDescription,\r\n            },\r\n            {\r\n              property: 'og:title',\r\n              content: title,\r\n            },\r\n            {\r\n              property: 'og:description',\r\n              content: metaDescription,\r\n            },\r\n            {\r\n              property: 'og:type',\r\n              content: 'website',\r\n            },\r\n            {\r\n              name: 'twitter:card',\r\n              content: 'summary',\r\n            },\r\n            {\r\n              name: 'twitter:creator',\r\n              content: site.siteMetadata?.author || '',\r\n            },\r\n            {\r\n              name: 'twitter:title',\r\n              content: title,\r\n            },\r\n            {\r\n              name: 'twitter:description',\r\n              content: metaDescription,\r\n            },\r\n          ].concat(meta)}\r\n      />\r\n  );\r\n}\r\n\r\n\r\nSeo.defaultProps = {\r\n  lang: 'en',\r\n  meta: [],\r\n  description: '',\r\n};","import React from 'react';\r\nimport Layout from '../components/Layout';\r\nimport {graphql} from 'gatsby';\r\nimport {GatsbyImage, getImage} from 'gatsby-plugin-image';\r\nimport Seo from '../components/Seo';\r\n\r\nexport default function SanBenedetto({data: {images}}) {\r\n\r\n  return <Layout header={'Faith Connexion'} next={\"/thestripedshop/\"}>\r\n    <Seo title={'Faith Connexion'}/>\r\n    <p>Faith connexion was my first photography job, done at NABA during my\r\n      photography class. The job consisted of photographing for this e-commerce\r\n      site. The concept of Faith Connexion is best described as multiple brands\r\n      united under one roof.\r\n    </p>\r\n    <p>\r\n      It was very inspiring to be able to create these shots in one's own home,\r\n      it\r\n      really helped me to take into account the spaces and light, trying to get\r\n      shots that could reflect the brand. In this job there was the creation of\r\n      outfits, study of positions, study of environments\r\n    </p>\r\n    <p><b>Role:</b> photographing subjects, creating styling, post-production of\r\n      photos, image retouching, study of photography, fashion photography.\r\n    </p>\r\n    <p><b>NABA 2018</b></p>\r\n    <div className=\"row project-gallery\" id=\"fc-pics-container\">\r\n      <div id=\"fc1\">\r\n        <GatsbyImage image={getImage(images.nodes[6])}/>\r\n      </div>\r\n      <div id=\"fc2\">\r\n        <GatsbyImage image={getImage(images.nodes[5])}/>\r\n      </div>\r\n      <div id=\"fc3\">\r\n        <GatsbyImage image={getImage(images.nodes[4])}/>\r\n\r\n        <div className={\"position-relative\"}>\r\n\r\n          <div id=\"fc4\">\r\n            <GatsbyImage\r\n                image={getImage(images.nodes[3])}/>\r\n          </div>\r\n          <div id=\"fc5\">\r\n            <GatsbyImage image={getImage(images.nodes[2])}/>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n    </div>\r\n    <div className=\"project-gallery\">\r\n      <div className=\"row \">\r\n        <div className=\"col-12\">\r\n          <GatsbyImage image={getImage(images.nodes[1])}/>\r\n        </div>\r\n        <div className=\"col-12\">\r\n          <GatsbyImage image={getImage(images.nodes[0])}/>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  </Layout>;\r\n}\r\nexport const query = graphql`{\r\n    images: allFile(\r\n      filter: {relativePath: {regex: \"/fc_(.*)/i\"}}\r\n      sort: {order: DESC, fields: relativePath}\r\n    ) { \r\n      nodes {\r\n        id\r\n        relativePath\r\n        childImageSharp {\r\n          gatsbyImageData(\r\n            layout: CONSTRAINED\r\n            quality: 100\r\n          )\r\n        }\r\n        publicURL\r\n      } \r\n    } \r\n  }\r\n`;"],"sourceRoot":""}