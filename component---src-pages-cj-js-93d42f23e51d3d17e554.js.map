{"version":3,"sources":["webpack://samuelesanguineti/./src/components/Seo.js","webpack://samuelesanguineti/./src/pages/cj.js"],"names":["Seo","description","lang","meta","title","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","SanBenedetto","images","data","header","className","G","image","getImage","nodes","style","position","top","right","left","imgStyle","transform"],"mappings":"6LAIe,SAASA,EAAT,GAEE,IAAD,IADDC,EACC,EADDA,YAAaC,EACZ,EADYA,KAAMC,EAClB,EADkBA,KAAMC,EACxB,EADwBA,MAE9BC,GAASC,QAAe,cAAxBD,KAaFE,EAAkBN,GAAeI,EAAKG,aAAaP,YACnDQ,EAAY,UAAGJ,EAAKG,oBAAR,aAAG,EAAmBJ,MAExC,OACI,gBAAC,IAAD,CACIM,eAAgB,CACdR,QAEFE,MAAOA,EACPO,cAAeF,EAAY,QAAWA,EAAiB,KACvDN,KAAM,CACJ,CACES,KAAM,cACNC,QAASN,GAEX,CACEO,SAAU,WACVD,QAAST,GAEX,CACEU,SAAU,iBACVD,QAASN,GAEX,CACEO,SAAU,UACVD,QAAS,WAEX,CACED,KAAM,eACNC,QAAS,WAEX,CACED,KAAM,kBACNC,SAAS,UAAAR,EAAKG,oBAAL,eAAmBO,SAAU,IAExC,CACEH,KAAM,gBACNC,QAAST,GAEX,CACEQ,KAAM,sBACNC,QAASN,IAEXS,OAAOb,KAMnBH,EAAIiB,aAAe,CACjBf,KAAM,KACNC,KAAM,GACNF,YAAa,K,2HClEA,SAASiB,EAAT,GAAyC,IAAXC,EAAU,EAAjBC,KAAOD,OAE3C,OAAO,gBAAC,IAAD,CAAQE,OAAQ,UACrB,gBAAC,IAAD,CAAKjB,MAAO,WACZ,ygBASA,kPAKA,yBAAG,kCAAH,yNAKA,yBAAG,wDACH,uBAAKkB,UAAU,uBACb,uBAAKA,UAAU,mBACb,gBAAC,EAAAC,EAAD,CACIC,OAAOC,OAASN,EAAOO,MAAM,OAEnC,uBAAKJ,UAAU,sCACb,uBAAKA,UAAU,OAEb,uBACIK,MAAO,CAACC,SAAS,WAAYC,IAAI,GAAGC,MAAM,EAAGC,KAAK,GAClDT,UAAU,OACZ,gBAAC,EAAAC,EAAD,CACIC,OAAOC,OAASN,EAAOO,MAAM,SAIvC,uBAAKJ,UAAU,mBACb,gBAAC,EAAAC,EAAD,CACIC,OAAOC,OAASN,EAAOO,MAAM,OAEnC,uBAAKJ,UAAU,mBACb,gBAAC,EAAAC,EAAD,CACIC,OAAOC,OAASN,EAAOO,MAAM,OAGnC,uBAAKJ,UAAU,mBACb,gBAAC,EAAAC,EAAD,CACIC,OAAOC,OAASN,EAAOO,MAAM,OAEnC,uBAAKJ,UAAU,mBACb,gBAAC,EAAAC,EAAD,CACIC,OAAOC,OAASN,EAAOO,MAAM,OAEnC,uBAAKJ,UAAU,mBACb,gBAAC,EAAAC,EAAD,CACIC,OAAOC,OAASN,EAAOO,MAAM,OAEnC,uBAAKJ,UAAU,UACb,gBAAC,EAAAC,EAAD,CACIC,OAAOC,OAASN,EAAOO,MAAM,OAEnC,uBAAKJ,UAAU,mBACb,gBAAC,EAAAC,EAAD,CACIC,OAAOC,OAASN,EAAOO,MAAM,OAEnC,uBAAKJ,UAAU,mBACb,gBAAC,EAAAC,EAAD,CACIC,OAAOC,OAASN,EAAOO,MAAM,OAEnC,uBAAKJ,UAAU,mBACb,gBAAC,EAAAC,EAAD,CACIC,OAAOC,OAASN,EAAOO,MAAM,KAC/BM,SAAU,CAACC,UAAW","file":"component---src-pages-cj-js-93d42f23e51d3d17e554.js","sourcesContent":["import React from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport { useStaticQuery, graphql } from 'gatsby';\r\n\r\nexport default function Seo({\r\n               description, lang, meta, title,\r\n             }) {\r\n  const { site } = useStaticQuery(\r\n      graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n          }\r\n        }\r\n      }\r\n    `,\r\n  );\r\n\r\n  const metaDescription = description || site.siteMetadata.description;\r\n  const defaultTitle = site.siteMetadata?.title;\r\n\r\n  return (\r\n      <Helmet\r\n          htmlAttributes={{\r\n            lang,\r\n          }}\r\n          title={title}\r\n          titleTemplate={defaultTitle ? `%s | ${defaultTitle}` : null}\r\n          meta={[\r\n            {\r\n              name: 'description',\r\n              content: metaDescription,\r\n            },\r\n            {\r\n              property: 'og:title',\r\n              content: title,\r\n            },\r\n            {\r\n              property: 'og:description',\r\n              content: metaDescription,\r\n            },\r\n            {\r\n              property: 'og:type',\r\n              content: 'website',\r\n            },\r\n            {\r\n              name: 'twitter:card',\r\n              content: 'summary',\r\n            },\r\n            {\r\n              name: 'twitter:creator',\r\n              content: site.siteMetadata?.author || '',\r\n            },\r\n            {\r\n              name: 'twitter:title',\r\n              content: title,\r\n            },\r\n            {\r\n              name: 'twitter:description',\r\n              content: metaDescription,\r\n            },\r\n          ].concat(meta)}\r\n      />\r\n  );\r\n}\r\n\r\n\r\nSeo.defaultProps = {\r\n  lang: 'en',\r\n  meta: [],\r\n  description: '',\r\n};","import React from 'react';\r\nimport Layout from '../components/Layout';\r\nimport {graphql} from 'gatsby';\r\nimport {GatsbyImage, getImage} from 'gatsby-plugin-image';\r\nimport Seo from '../components/Seo';\r\n\r\nexport default function SanBenedetto({data: {images}}) {\r\n\r\n  return <Layout header={'The CJ'}>\r\n    <Seo title={'The CJ'}/>\r\n    <p>CJ is a project born from the union of great works of art, namely\r\n      Christo's Floating Piers and Jacquemus fashion show in honor of the 10th\r\n      anniversary of his fashion house. The brief called for the creation of a\r\n      head covering inspired by a tiara or crown.\r\n      The decision to create a tiara inspired by these two works of art was born\r\n      from the idea of being able to combine two projects so similar and so\r\n      important in a different accessory, where it could express the genius of\r\n      these two artists.\r\n    </p>\r\n    <p>\r\n      It is made with an internal structure of organic cardboard, and covered\r\n      with orange and fuchsia faux leather, in the back instead there is a set\r\n      of lavender flowers to take the naturalness of the two works of art.\r\n    </p>\r\n    <p><b>Role:</b> creation of an object, study and design of hat, creation of\r\n      communication project, photographing subjects, creating styling,\r\n      post-production of photos, image retouching, study of photography, fashion\r\n      photography.\r\n    </p>\r\n    <p><b>Politecnico di Milano 2020</b></p>\r\n    <div className=\"row project-gallery\">\r\n      <div className=\"col-12 col-md-6\">\r\n        <GatsbyImage\r\n            image={getImage(images.nodes[0])}/>\r\n      </div>\r\n      <div className=\"col-12 col-md-6 position-relative \">\r\n        <div className=\"row\">\r\n\r\n          <div\r\n              style={{position:'absolute', top:30,right:0, left:0}}\r\n              className=\"col\">\r\n            <GatsbyImage\r\n                image={getImage(images.nodes[2])}/>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"col-12 col-md-4\">\r\n        <GatsbyImage\r\n            image={getImage(images.nodes[3])}/>\r\n      </div>\r\n      <div className=\"col-12 col-md-8\">\r\n        <GatsbyImage\r\n            image={getImage(images.nodes[4])}/>\r\n      </div>\r\n\r\n      <div className=\"col-12 col-md-4\">\r\n        <GatsbyImage\r\n            image={getImage(images.nodes[5])}/>\r\n      </div>\r\n      <div className=\"col-12 col-md-4\">\r\n        <GatsbyImage\r\n            image={getImage(images.nodes[6])}/>\r\n      </div>\r\n      <div className=\"col-12 col-md-4\">\r\n        <GatsbyImage\r\n            image={getImage(images.nodes[7])}/>\r\n      </div>\r\n      <div className=\"col-12\">\r\n        <GatsbyImage\r\n            image={getImage(images.nodes[8])}/>\r\n      </div>\r\n      <div className=\"col-12 col-md-4\">\r\n        <GatsbyImage\r\n            image={getImage(images.nodes[9])}/>\r\n      </div>\r\n      <div className=\"col-12 col-md-4\">\r\n        <GatsbyImage\r\n            image={getImage(images.nodes[1])}/>\r\n      </div>\r\n      <div className=\"col-12 col-md-4\">\r\n        <GatsbyImage\r\n            image={getImage(images.nodes[10])}\r\n          imgStyle={{transform: \"scaleX(-1)\"}}\r\n        />\r\n      </div>\r\n\r\n    </div>\r\n  </Layout>;\r\n}\r\nexport const query = graphql`{\r\n    images: allFile(\r\n      filter: {relativePath: {regex: \"/cj_(.*)/i\"}}\r\n      sort: {order: ASC, fields: relativePath}\r\n    ) { \r\n      nodes {\r\n        id\r\n        relativePath\r\n        childImageSharp {\r\n          gatsbyImageData(\r\n            layout: FULL_WIDTH\r\n            quality: 100\r\n          )\r\n        }\r\n        publicURL\r\n      } \r\n    } \r\n  }\r\n`;"],"sourceRoot":""}